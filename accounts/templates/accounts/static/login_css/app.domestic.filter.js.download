appOnlineOrder.controller([]).filter('replace', function () {
    return function (input, from, to) {
        if (input === undefined) {
            return;
        }
        var regex = new RegExp(from, 'g');
        return input.replace(regex, to);
    };
});
appOnlineOrder.controller([]).filter('truncate', function () {
    return function (text, length, end) {
        if (isNaN(length))
            length = 10;
        if (end === undefined)
            end = "...";
        if (text.length <= length || text.length - end.length <= length) {
            return text;
        }
        else {
            return String(text).substring(0, length - end.length) + end;
        }
    };
});

appOnlineOrder.controller([]).filter('padleft', function () {
    return function (input, n, chartext) {
        if (input === undefined)
            input = ""
        if (input.length >= n)
            return input
        var zeros = "";
        for (var cnt = 1; cnt <= n; cnt++) {
            zeros += chartext;
        }
        return (zeros + input).slice(-1 * n)
    };
});

appOnlineOrder.controller([]).filter('notequal', function () {
    return function (items, field, minvalue) {
        if (minvalue === false || field === false) {
            return items;
        }
        if ((minvalue || angular.isUndefined(minvalue)) && angular.isArray(items) && field) {
            var newItems = [];
            angular.forEach(items, function (item) {
                if (parseFloat(item[field]) != parseFloat(minvalue)) {
                    newItems.push(item);
                }
            });
            items = newItems;
        }
        return items;
    };
});

appOnlineOrder.controller([]).filter('unique', function () {
    return function (items, filterOn) {
        if (filterOn === false) {
            return items;
        }
        if ((filterOn || angular.isUndefined(filterOn)) && angular.isArray(items)) {
            var hashCheck = {}, newItems = [];
            var extractValueToCompare = function (item) {
                if (angular.isObject(item) && angular.isString(filterOn)) {
                    return item[filterOn];
                } else {
                    return item;
                }
            };
            angular.forEach(items, function (item) {
                var valueToCheck, isDuplicate = false;
                if (item[filterOn] != '') {
                    for (var i = 0; i < newItems.length; i++) {
                        if (angular.equals(extractValueToCompare(newItems[i]), extractValueToCompare(item))) {
                            isDuplicate = true;
                            break;
                        }
                    }
                    if (!isDuplicate) {
                        newItems.push(item);
                    }
                }
            });
            items = newItems;
        }
        return items;
    };
});